//Arrays // Two Pointers

Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Note that you must do this in-place without making a copy of the array.

Example 1:

Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]

class Solution {
    public void moveZeroes(int[] nums) {
        
        int snowballCnt = 0;
        //calculate the snowball size or the counts of 0s present in the nums
        for(int i = 0; i <nums.length; i++)
        {
            if(nums[i] == 0)
            {
                snowballCnt++;
            }
            //id current nums[i] is now a 0 then we need to perform swapping
            else if(snowballCnt > 0)
            {
                int t = nums[i];
                nums[i] = 0;
                nums[i - snowballCnt] = t;
            }
        }
    }
}
