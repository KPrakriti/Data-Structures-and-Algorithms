Given an integer array nums, find three numbers whose product is maximum and return the maximum product.

Example 1:

Input: nums = [1,2,3]
Output: 6

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
APPROACH 1 

class Solution {
    public int maximumProduct(int[] nums) {
        
        Arrays.sort(nums); //O(NlogN)
        int ans = 1;
        for(int i = nums.length-1; i>=nums.length-3; i--) //O(3)
        {
            ans *= nums[i];
        }
        return ans;
    }
}

APPROACH 2 : O(N) 

class Solution {
    public int maximumProduct(int[] nums) {
        
        //we need 5 variables 
        //min1 min2 max1 max2 max3
        
        int min1 = Integer.MAX_VALUE;
        int min2 = min1;
        
        int max1 = Integer.MIN_VALUE;
        int max2 = max1;
        int max3 = max2;
        
        //lets decide final values of min1 min2 max1 max2 max3
        for(int i = 0; i<nums.length; i++)
        {
            //max
            if(nums[i] >= max1)
            {
                max3 = max2;
                max2 = max1;
                max1 = nums[i];

            }
            
            else if(nums[i] >= max2)
            {
                max3 = max2;
                max2 = nums[i];
                 
            }
            
            else if(nums[i] >= max3)
            {
                max3 = nums[i];

            }
            
            //min
             if(nums[i] <= min1) 
            {
                min2 = min1;
                min1 = nums[i];
                
            }
            else if(nums[i] <= min2)
            {
                min2 = nums[i];
            }
        }
        
        return Math.max(min1*min2*max1 , max1*max2*max3);
        
    }
}
